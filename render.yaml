# render.yaml

# If you want session persistence for chat, keep the volume; otherwise omit it.
# volumes:
#   - name: session-data
#     sizeGB: 1

services:
  # 1) Order Service (Free & Ephemeral)
  - type: web
    name: ecom-order
    plan: free
    runtime: docker
    repo: https://github.com/kevon217/ecom-assistant
    branch: master
    dockerfilePath: ./services/order/Dockerfile.render
    dockerContext: .
    healthCheckPath: /health
    envVars:
      - key: PORT
        value: 10000
      - key: ORDER_DATA_PATH
        value: /app/data/orders_cleaned.csv
      - key: LOG_LEVEL
        value: DEBUG

  # 2) Product Service (Free & Ephemeral)
  - type: web
    name: ecom-product
    plan: free
    runtime: docker
    repo: https://github.com/kevon217/ecom-assistant
    branch: master
    dockerfilePath: ./services/product/Dockerfile.render
    dockerContext: .
    healthCheckPath: /health
    envVars:
      - key: PORT
        value: 10000
      - key: PRODUCT_DATA_PATH
        value: /app/data/products_cleaned.csv
      - key: CHROMA_PERSIST_DIR
        value: /app/data/chroma
      - key: EMBEDDING_MODEL
        value: all-MiniLM-L6-v2
      - key: LOG_LEVEL
        value: DEBUG

  # 3) Chat Service (waits for its dependencies)
  - type: web
    name: ecom-chat
    plan: free
    runtime: docker
    repo: https://github.com/kevon217/ecom-assistant
    branch: master
    dockerfilePath: ./services/chat/Dockerfile.render
    dockerContext: .
    healthCheckPath: /health
    # Comment out diskMounts below to use ephemeral storage for sessions instead
    # diskMounts:
    #   - volume: session-data
    #     mountPath: /tmp/sessions

    startCommand: |
      # Wait for Order MCP (tools discovery) via public URL
      until curl -sf https://ecom-order.onrender.com/mcp -H "Accept: application/json"; do
        echo "⏳ Waiting on Order MCP…"; sleep 5
      done

      # Wait for Product MCP (tools discovery) via public URL
      until curl -sf https://ecom-product-w38k.onrender.com/mcp -H "Accept: application/json"; do
        echo "⏳ Waiting on Product MCP…"; sleep 5
      done

      echo "✅ All MCP endpoints ready; starting Chat"
      exec uvicorn chat.app:app --host 0.0.0.0 --port $PORT

    envVars:
      - key: PORT
        value: 10000
      - key: ORDER_MCP_URL
        value: https://ecom-order.onrender.com/mcp
      - key: PRODUCT_MCP_URL
        value: https://ecom-product-w38k.onrender.com/mcp
      - key: OPENAI_API_KEY
        sync: false
      - key: AGENT_MODEL
        value: gpt-4o-mini
      - key: AGENT_TOOL_TIMEOUTS
        value: "30"
      - key: AGENT_TOOL_RETRIES
        value: "3"
      - key: AGENT_MAX_CONCURRENT_TOOLS
        value: "5"
      - key: CHAT_STARTUP_DELAY
        value: "0"
      - key: CHAT_SESSION_TTL
        value: "60"
      - key: CHAT_SESSION_STORE_PATH
        value: "/tmp/sessions"
      - key: CHAT_ALLOWED_ORIGINS
        value: '["*"]'
      - key: LOG_LEVEL
        value: DEBUG
