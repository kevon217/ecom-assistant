# services/product/Dockerfile.render
FROM python:3.11-slim AS base

# System deps
RUN apt-get update \
 && apt-get install -y curl build-essential \
 && rm -rf /var/lib/apt/lists/*

# Install uv (uvicorn shim)
RUN pip install uv

# Workdir
WORKDIR /app

# Cache Python deps install
COPY services/product/pyproject.toml /app/services/product/
WORKDIR /app/services/product
RUN uv pip install --system .

# Copy in your code and shared libs
WORKDIR /app
COPY libs /app/libs
COPY services/product/src /app/services/product/src
COPY data/products_cleaned.csv /app/data/products_cleaned.csv

# Root-level bootstrap script
COPY scripts/bootstrap/load_vectors.py /app/scripts/bootstrap/load_vectors.py

# Make Chroma directory & bootstrap
RUN mkdir -p /app/data/chroma
RUN python /app/scripts/bootstrap/load_vectors.py \
      --csv /app/data/products_cleaned.csv \
      --persist-dir /app/data/chroma \
      --collection products \
      --model all-MiniLM-L6-v2

# Create non-root user
# RUN useradd -m -u 1000 appuser && chown -R appuser:appuser /app /tmp/sessions
# USER appuser

# ENV and healthcheck
ENV PYTHONPATH="/app/services/product/src:/app/libs:/app" \
    PYTHONUNBUFFERED=1 \
    PORT=10000 \
    CHROMA_PERSIST_DIR="/app/data/chroma"

HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=5 \
  CMD curl -f http://localhost:${PORT}/health \
      && curl -sf http://localhost:${PORT}/mcp -H "Accept: application/json" || exit 1

EXPOSE 10000

# Entrypoint
CMD ["python", "-m", "uvicorn", "product.app:app", "--host", "0.0.0.0", "--port", "10000"]
